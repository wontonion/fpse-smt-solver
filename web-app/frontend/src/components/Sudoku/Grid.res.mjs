// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Cell from "./Cell.res.mjs";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Caml_int32 from "rescript/lib/es6/caml_int32.js";
import * as Core__Array from "@rescript/core/src/Core__Array.res.mjs";
import * as Core__Option from "@rescript/core/src/Core__Option.res.mjs";
import * as JsxRuntime from "react/jsx-runtime";

function Grid(props) {
  var onCellChange = props.onCellChange;
  var values = props.values;
  var size = props.size;
  var subGridSize;
  switch (size) {
    case 4 :
    case 6 :
        subGridSize = 2;
        break;
    default:
      subGridSize = 3;
  }
  return JsxRuntime.jsx("div", {
              children: Core__Array.make(size, 0).map(function (rowIndex, param) {
                    return JsxRuntime.jsx("div", {
                                children: Core__Array.make(size, 0).map(function (colIndex, param) {
                                      var isRightBorder = Caml_int32.mod_(colIndex + 1 | 0, subGridSize) === 0 && colIndex !== (size - 1 | 0);
                                      var isBottomBorder = Caml_int32.mod_(rowIndex + 1 | 0, subGridSize) === 0 && rowIndex !== (size - 1 | 0);
                                      var cell = Core__Option.getOr(Core__Option.flatMap(Belt_Array.get(values, rowIndex), (function (row) {
                                                  return Belt_Array.get(row, colIndex);
                                                })), {
                                            value: "",
                                            isInitial: false,
                                            isValid: true
                                          });
                                      return JsxRuntime.jsx(Cell.make, {
                                                  cell: cell,
                                                  rowIndex: rowIndex,
                                                  colIndex: colIndex,
                                                  isRightBorder: isRightBorder,
                                                  isBottomBorder: isBottomBorder,
                                                  onCellChange: onCellChange
                                                }, rowIndex.toString() + "-" + colIndex.toString());
                                    }),
                                className: "flex"
                              }, rowIndex.toString());
                  }),
              className: "grid gap-0"
            });
}

var make = Grid;

export {
  make ,
}
/* Cell Not a pure module */
